name: Generate Project Structure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create_structure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create project structure
      run: |
        mkdir -p my_python_app/.buildozer
        mkdir -p my_python_app/.vscode
        mkdir -p my_python_app/app/other_modules
        mkdir -p my_python_app/assets

        touch my_python_app/.vscode/launch.json
        touch my_python_app/app/main.py
        touch my_python_app/app/__init__.py
        touch my_python_app/app/app.kv
        touch my_python_app/app/other_modules/module1.py
        touch my_python_app/app/other_modules/module2.py
        touch my_python_app/assets/icon.png
        touch my_python_app/assets/splash.png
        touch my_python_app/buildozer.spec
        touch my_python_app/README.md
        touch my_python_app/requirements.txt

    - name: Add content to files
      run: |
        echo '{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Python: Current File",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal"
    }
  ]
}' > my_python_app/.vscode/launch.json

        echo 'from kivy.app import App
from kivy.uix.label import Label

class MyApp(App):
    def build(self):
        return Label(text="Hello, Android!")

if __name__ == "__main__":
    MyApp().run()' > my_python_app/app/main.py

        echo 'kivy==2.1.0' > my_python_app/requirements.txt

        echo '[app]
title = My Application
package.name = myapp
package.domain = org.myapp
source.include_exts = py,png,jpg,kv,atlas
version = 0.1
requirements = python3,kivy
orientation = portrait
osx.kivy_version = 2.1.0
fullscreen = 1

[buildozer]
log_level = 2
warn_on_root = 1' > my_python_app/buildozer.spec

        echo '# My Python App
This is a sample Python project structure for creating an Android APK using Kivy and Buildozer.' > my_python_app/README.md

    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add .
        git commit -m 'Generate project structure'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
